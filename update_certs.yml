---
- name: Start Container
  hosts: proxmox
  tasks:
    - name: First Start
      ansible.builtin.import_role:
        name: pct
      vars:
        goal: "start"

- name: Check Certs
  hosts: container:proxmox:!certmanager
  gather_facts: true
  become: false
  # debugger: on_failed # https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_debugger.html
  tags: [update]
  vars:
    host_url: "{{ ansible_hostname | dict2items | map(attribute='value.url', default=[]) }}"
  vars_files:
    - vars/main.yml
  tasks:
    - name: Create folder if not existing
      ansible.builtin.file:
        path: "{{ container_ssl_path }}"
        state: directory
        follow: true
        mode: '0600'

- name: Update Systems
  hosts: certmanager
  gather_facts: true
  become: false
  tags: [update]
  vars:
    host_url: "{{ hostvars | dict2items | map(attribute='value.url', default=[]) }}"
  vars_files:
    - vars/main.yml
  tasks:
    - name: Setup variable
      ansible.builtin.set_fact:
        domain_list: []
        update_cert: true
    - name: Create list
      ansible.builtin.set_fact:
        domain_list: "{{ domain_list + [dict({'key': hostname, 'value': path})] }}"
      loop: "{{ hostvars.keys() | list }}"
      vars:
        hostname: "{{ item }}"
        path: "/etc/letsencrypt/live/{{ item }}"
      # run_once: true
    - name: Prepare System
      ansible.builtin.apt:
        package:
          - python3
          - python3-venv
          - virtualenv
          - python3-virtualenv
          - libaugeas0
        update_cache: true
    - name: Install certbot
      ansible.builtin.pip:
        virtualenv: ~/opt/certbot/
        virtualenv_site_packages: true
        virtualenv_command: /usr/bin/virtualenv
        # virtualenv_python: '-m venv'
        name:
          - certbot
          - certbot-nginx
    - name: Create folder
      ansible.builtin.file:
        path: "{{ item.value }}/html"
        state: directory
        follow: true
        mode: '0600'
      loop: "{{ domain_list }}"
    - name: Create config folder
      ansible.builtin.file:
        path: ".config/letsencrypt/"
        state: directory
        follow: true
        mode: '0600'
    - name: Copy Cert config
      ansible.builtin.copy:
        src: "cli.ini"
        dest: ".config/letsencrypt/cli.ini"
        mode: '0600'
        force: true
    - name: Update certificate with certbot
      vars:
        env_var: "{{ certbot_domains_parameter }}"
      ansible.builtin.command:
        cmd: ./opt/certbot/bin/certbot certonly --renew-by-default -n --preferred-challenges=http --standalone {{ env_var }}
      changed_when: true
      when: update_cert
    - name: Copy Files
      block:
        - name: Copy to local
          ansible.builtin.fetch:
            src: "{{ certbot_domains_cert_path }}/ninsun.sterk-bodensee.de/{{ item }}.pem"
            dest: "{{ playbook_dir }}/ssl-cert/"
            flat: true
            # mode: '0600'
          loop:
            - "fullchain"
            - "privkey"
            - "cert"
            - "chain"
- name: Update Systems
  hosts: container:proxmox:!certmanager
  gather_facts: true
  become: false
  tags: [update]
  vars_files:
    - vars/main.yml
  tasks:
    - name: Copy certificates to target host
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/ssl-cert/{{ item }}.pem"
        dest: "{{ container_ssl_path }}"
        mode: '0600'
      loop:
        - "fullchain"
        - "privkey"
        - "cert"
        - "chain"

- name: Update Pihole Cert
  hosts: pihole
  tags: [update]
  vars_files:
    - vars/main.yml
  tasks:
    - name: Create combined cert
      ansible.builtin.shell:
        cmd: cat {{ container_ssl_path }}cert.pem {{ container_ssl_path }}privkey.pem > {{ container_ssl_path }}combined.pem
    - name: Update Service
      ansible.builtin.systemd:
        name: lighttpd
        state: restarted

- name: Update Proxmox API
  hosts: proxmox
  tags: [update]
  vars_files:
    - vars/main.yml
  tasks:
    - name: Start Proxmox cert update
      ansible.builtin.import_role:
        name: proxmox

- name: Stop Container
  hosts: proxmox
  tasks:
    - name: First Start
      ansible.builtin.import_role:
        name: pct
      vars:
        goal: "stop"
